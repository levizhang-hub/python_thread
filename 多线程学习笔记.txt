import threading
def thread_job():
    print('this is aan added thread,number is %s'% threading.current_thread())
    
def main():
    print(threading.active_count())
    print(threading.enumerate())
    print(threading.current_thread())
    added_thread=threading.Thread(target=thread_job)
    added_thread.start()
if __name__ =='__main__':
    main()


join()函数的使用
等待线程函数结束

Queue功能多线程的Q，线程函数中把数据放入Queue中(q.put())，主线程中等待线程结束取出数据q.get()

python多线程使用的是GIL，同意时刻只能是一个线程在运行，GIL具有release，和acquire两个状态


lock（）用法
lock=thread.Lock()
锁住
lock.acquire()
解锁
lock.release()